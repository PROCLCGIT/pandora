"""
Django settings for pandora project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Inicializar environ
env = environ.Env(
    # Valores por defecto - no se usarán si están definidos en .env
    DEBUG=(bool, False),
    ALLOWED_HOSTS=(list, ['localhost', '127.0.0.1']),
    CORS_ALLOWED_ORIGINS=(list, ['http://localhost:3000', 'http://localhost:5173']),
    SECRET_KEY=(str, ''),  # Valor vacío para forzar el uso de variable de entorno
    DB_NAME=(str, ''),
    DB_USER=(str, ''),
    DB_PASSWORD=(str, ''),
    DB_HOST=(str, ''),
    DB_PORT=(str, ''),
    JWT_COOKIE_SECURE=(bool, False),  # False por defecto para desarrollo, True para producción
    SECURE_COOKIES=(bool, True),  # True por defecto para asegurar que las cookies sean seguras en producción
)

# Construir ruta al archivo .env
env_path = BASE_DIR / '.env'
# Lee el archivo .env si existe
environ.Env.read_env(env_file=str(env_path))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('ALLOWED_HOSTS')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Paquetes de terceros
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',  # Añadido para blacklist de tokens
    'django_filters',
    'corsheaders',
    'drf_yasg',
    # 'imagekit',  # Para procesamiento de imágenes (no es necesario con nuestro procesador personalizado)
    # Aplicaciones propias
    'users.apps.UsersConfig',  # Nueva app para modelo de usuario personalizado
    'basic',
    'directorio',
    'productos',
    'proformas',
    'docmanager',
    'fastinfo',
    'inventario',
    'importexport',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.AuthenticationErrorMiddleware',  # Middleware personalizado para errores de autenticación
]

# Configuración del modelo de usuario personalizado
AUTH_USER_MODEL = 'users.User'

# CORS configuration
CORS_ALLOW_ALL_ORIGINS = False  # No permitir todos los orígenes por seguridad
CORS_ALLOWED_ORIGINS = env('CORS_ALLOWED_ORIGINS')  # Obtener de variables de entorno
CORS_ALLOW_CREDENTIALS = True  # Necesario para permitir cookies en peticiones CORS
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Habilitar también CORS_EXPOSE_HEADERS para headers personalizados si se necesitan
CORS_EXPOSE_HEADERS = [
    'content-type',
    'x-csrftoken',
]

# CSRF configuration
CSRF_USE_SESSIONS = False  # No usar sesiones para el token CSRF
CSRF_COOKIE_SECURE = not DEBUG  # En producción, solo por HTTPS
CSRF_COOKIE_HTTPONLY = False  # Javascript debe acceder a este token
CSRF_COOKIE_SAMESITE = 'Lax'  # Compromiso entre seguridad y usabilidad

# Esta configuración ya está definida arriba, no es necesario duplicarla
# CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'pandora.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'productos', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pandora.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
        },
        'TEST': {
            'CHARSET': 'utf8mb4',
            'COLLATION': 'utf8mb4_unicode_ci',
        },
        'CONN_MAX_AGE': 60,  # Mantener conexiones abiertas por 60 segundos
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración global de seguridad para cookies
SECURE_COOKIES = env('SECURE_COOKIES')

# ============================================
# Configuración avanzada de REST Framework
# ============================================

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'users.auth_backend.CookieTokenAuthentication',  # Clase de autenticación separada
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Mantener para compatibilidad
    ),
    
    # Paginación - Se maneja específicamente en cada ViewSet
    'PAGE_SIZE': 10,
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    
    # Filtrado
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    
    # Permisos - Cambiado para requerir autenticación por defecto
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    
    # Throttling - Añadidas clases por defecto
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '200/min',       # Aumentado a 200/min
        'user': '500/min',       # Aumentado a 500/min
        'burst': '300/min',      # Aumentado a 300/min
        'sustained': '5000/day',  # Aumentado a 5000/day
        'user_burst': '500/min',  # Aumentado a 500/min
        'user_sustained': '20000/day', # Aumentado a 20000/day
    },
    
    # Renderers (formatos de respuesta)
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    
    # Manejo de excepciones
    'EXCEPTION_HANDLER': 'core.exceptions.custom_exception_handler',
    
    # Versionado de API
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',
}

# Configuración de Swagger para documentación de API
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False,
    'PERSIST_AUTH': True,
    'REFETCH_SCHEMA_WITH_AUTH': True,
    'REFETCH_SCHEMA_ON_LOGOUT': True,
}

# Configuración de CSRF para trabajar con cookies HttpOnly
CSRF_USE_SESSIONS = False
CSRF_COOKIE_HTTPONLY = False  # Debe ser False para que JavaScript pueda acceder al token CSRF
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SECURE = env.bool('JWT_COOKIE_SECURE', default=not DEBUG)

# Configuración para imágenes de productos
PRODUCT_IMAGE_SIZES = {
    'thumbnail': (150, 150),    # Miniatura pequeña
    'webp': (800, 600),         # WebP optimizado para web
    'original': None,           # Mantener tamaño original
}

# Configuración de calidad para cada formato
IMAGE_QUALITY_SETTINGS = {
    'thumbnail': 75,
    'webp': 85,
    'original': 100,
}

# Configuraciones de procesamiento de imagen
IMAGE_PROCESSING_CONFIG = {
    'preserve_original': True,
    'create_thumbnail': True,
    'create_webp': True,
    'webp_quality': 85,
    'thumbnail_quality': 75,
    'original_folder': 'originales',
    'thumbnail_folder': 'miniaturas',
    'webp_folder': 'webp',
}

# Configuraciones adicionales de imagen requeridas
IMAGE_FORMAT = 'WEBP'  # Formato por defecto para imágenes
IMAGE_QUALITY = 85     # Calidad por defecto

# Configuración de JWT para autenticación - Valores desde variables de entorno
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=int(env('JWT_ACCESS_TOKEN_LIFETIME_MINUTES', default=45))),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=int(env('JWT_REFRESH_TOKEN_LIFETIME_DAYS', default=1))),
    'ROTATE_REFRESH_TOKENS': env.bool('JWT_ROTATE_REFRESH_TOKENS', default=True),
    'BLACKLIST_AFTER_ROTATION': env.bool('JWT_BLACKLIST_AFTER_ROTATION', default=True),
    'ALGORITHM': 'HS256',
    # La clave secreta se obtiene de las configuraciones de Django
    'SIGNING_KEY': SECRET_KEY,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    
    # Nuevas configuraciones para cookies JWT
    'AUTH_COOKIE': 'access_token',  # Nombre de la cookie de token de acceso
    'AUTH_COOKIE_REFRESH': 'refresh_token',  # Nombre de la cookie de token de refresco
    'AUTH_COOKIE_DOMAIN': None,  # Dominio para las cookies
    'AUTH_COOKIE_SECURE': env.bool('JWT_COOKIE_SECURE', default=not DEBUG),  # Solo HTTPS en producción
    'AUTH_COOKIE_HTTP_ONLY': True,  # No accesible por JavaScript
    'AUTH_COOKIE_PATH': '/',  # Ruta de la cookie
    'AUTH_COOKIE_SAMESITE': 'Lax'  # Configuración SameSite para evitar CSRF
}