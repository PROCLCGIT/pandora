import{u as i,a as o,b as t}from"./axios-CTonWHPK.js";import{v as c}from"./index-CuM1UVNz.js";import{u as f}from"./useInfiniteQuery-Ci5GnK52.js";const s="/basic/zonas/",h="/basic/zona-ciudad/",a="zonas",d=async(e={})=>{try{const r=await t.get(s,{params:e});return Array.isArray(r.data)?{count:r.data.length,results:r.data}:r.data&&r.data.results?r.data:{count:1,results:Array.isArray(r.data)?r.data:[r.data].filter(Boolean)}}catch(r){throw console.error("Error fetching zonas:",r),r}},g=async e=>{try{return(await t.get(`${s}${e}/`)).data}catch(r){throw console.error(`Error fetching zona id ${e}:`,r),r}},E=async e=>{try{return(await t.get(`${s}${e}/ciudades/`)).data}catch(r){throw console.error(`Error fetching zona with cities id ${e}:`,r),r}},q=async e=>{try{return(await t.post(s,e)).data}catch(r){throw console.error("Error creating zona:",r),r}},w=async({id:e,data:r})=>{try{return(await t.put(`${s}${e}/`,r)).data}catch(n){throw console.error(`Error updating zona id ${e}:`,n),n}},m=async e=>{try{return await t.delete(`${s}${e}/`),e}catch(r){throw console.error(`Error deleting zona id ${e}:`,r),r}},Z=async({zona_id:e,ciudad_ids:r})=>{try{return(await t.post(`${h}asignar_multiples/`,{zona_id:e,ciudad_ids:r})).data}catch(n){throw console.error(`Error assigning cities to zone ${e}:`,n),n}},S=(e={},r={})=>i({queryKey:[a,e],queryFn:()=>d(e),staleTime:5*60*1e3,refetchOnWindowFocus:!1,retry:1,...r}),$=(e,r={})=>i({queryKey:[a,e],queryFn:()=>g(e),enabled:!!e,staleTime:5*60*1e3,retry:1,retryDelay:1e3,refetchOnWindowFocus:!1,placeholderData:{id:null,nombre:"",code:"",cobertura:""},...r}),Q=(e,r={})=>i({queryKey:[a,e,"ciudades"],queryFn:()=>E(e),enabled:!!e,staleTime:5*60*1e3,retry:1,retryDelay:1e3,refetchOnWindowFocus:!1,...r}),F=(e={})=>{const r=c();return o({mutationFn:q,onSuccess:n=>{r.invalidateQueries({queryKey:[a]}),e.onSuccess&&e.onSuccess(n)},onError:n=>{e.onError&&e.onError(n)},...e})},p=(e={})=>{const r=c();return o({mutationFn:w,onSuccess:n=>{r.invalidateQueries({queryKey:[a,n.id]}),r.invalidateQueries({queryKey:[a,n.id,"ciudades"]}),r.invalidateQueries({queryKey:[a]}),e.onSuccess&&e.onSuccess(n)},onError:n=>{e.onError&&e.onError(n)},...e})},v=(e={})=>{const r=c();return o({mutationFn:m,onSuccess:n=>{r.invalidateQueries({queryKey:[a,n]}),r.invalidateQueries({queryKey:[a,n,"ciudades"]}),r.invalidateQueries({queryKey:[a]}),e.onSuccess&&e.onSuccess(n)},onError:n=>{e.onError&&e.onError(n)},...e})},A=(e={})=>{const r=c();return o({mutationFn:Z,onSuccess:n=>{r.invalidateQueries({queryKey:[a,n.zona_id]}),r.invalidateQueries({queryKey:[a,n.zona_id,"ciudades"]}),e.onSuccess&&e.onSuccess(n)},onError:n=>{e.onError&&e.onError(n)},...e})},b=(e={},r={})=>{const n=e.page_size||10;return f({queryKey:[a,"infinite",e],queryFn:({pageParam:u=1})=>d({...e,page:u,page_size:n}),getNextPageParam:(u,y)=>{const l=Math.ceil(u.count/n);return y.length<l?y.length+1:void 0},staleTime:5*60*1e3,refetchOnWindowFocus:!1,retry:1,...r})};export{v as a,$ as b,Q as c,F as d,p as e,A as f,b as g,S as u};
